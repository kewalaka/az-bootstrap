name: AzBootstrap Integration Test

# This workflow runs an end-to-end integration test of the az-bootstrap module
# It can be triggered manually and requires the following secrets to be configured:
#   - AZURE_CLIENT_ID: The client ID of a service principal with permissions to create resources
#   - AZURE_TENANT_ID: The tenant ID of the Azure subscription
#   - AZURE_SUBSCRIPTION_ID: The ID of the Azure subscription
#   - GH_TOKEN: A GitHub token with permissions to create repositories

on:
  workflow_dispatch:
    # Manual trigger with no inputs required

permissions:
  id-token: write # Required for Azure login with OIDC
  contents: read  # Required to checkout code
  packages: read  # Required for package access

jobs:
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up PowerShell
        uses: actions/setup-powershell@v1
        with:
          powershell-version: '7.2'
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Setup GitHub CLI
        run: |
          gh --version
          gh auth status || gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"
          echo "GitHub CLI authenticated successfully"
        shell: bash
        
      - name: Install required PowerShell modules
        run: |
          pwsh -Command "Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force"
          echo "PowerShell modules installed successfully"
        
      - name: Run Integration Test
        run: |
          cd ${{ github.workspace }}
          pwsh -Command "Write-Host 'Starting integration test' -ForegroundColor Green"
          pwsh -Command "./integration-tests/Invoke-IntegrationTest.ps1"
        
      - name: Clean up resources on completion
        if: ${{ always() }}
        run: |
          cd ${{ github.workspace }}
          pwsh -Command "Write-Host 'Starting cleanup' -ForegroundColor Yellow"
          pwsh -Command "./integration-tests/Invoke-IntegrationTest.ps1 -Cleanup"